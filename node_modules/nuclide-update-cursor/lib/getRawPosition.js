
/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

/**
 * Converts a position given as {row, column} to a single number which is the
 * index the cursor appears in the source string.
 *
 * index is given such that source.slice(0, index) is the precise  string that
 * occurs before the cursor, and source.slice(index) is the string that occurs
 * after the cursor.
 */
function getRawPosition(source, position) {
  return source.split('\n').reduce(function (curr, line, i) {
    if (i < position.row) {
      return curr + line.length + 1;
    } else if (i === position.row) {
      return curr + position.column;
    } else {
      return curr;
    }
  }, 0);
}

module.exports = getRawPosition;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBwZmw1Mm5wdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLXVwZGF0ZS1jdXJzb3IvbGliL2dldFJhd1Bvc2l0aW9uLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFdBQVcsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJaLFNBQVMsY0FBYyxDQUNyQixNQUFjLEVBQ2QsUUFBdUMsRUFDL0I7QUFDUixTQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUM5QixVQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFLO0FBQ2pCLFFBQUksQ0FBQyxHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUU7QUFDcEIsYUFBTyxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7S0FDL0IsTUFBTSxJQUFJLENBQUMsS0FBSyxRQUFRLENBQUMsR0FBRyxFQUFFO0FBQzdCLGFBQU8sSUFBSSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUM7S0FDL0IsTUFBTTtBQUNMLGFBQU8sSUFBSSxDQUFDO0tBQ2I7R0FDRixFQUNELENBQUMsQ0FDRixDQUFDO0NBQ0g7O0FBRUQsTUFBTSxDQUFDLE9BQU8sR0FBRyxjQUFjLENBQUMiLCJmaWxlIjoiL3Zhci9mb2xkZXJzL3hmL3JzcGg0X2M1NzMxNXJzNTd4eHNkc2tyeG52MzZ0MC9UL3RtcHBmbDUybnB1Ymxpc2hfcGFja2FnZXMvbnBtL251Y2xpZGUtdXBkYXRlLWN1cnNvci9saWIvZ2V0UmF3UG9zaXRpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJztcbi8qIEBmbG93ICovXG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgbGljZW5zZSBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGluXG4gKiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKipcbiAqIENvbnZlcnRzIGEgcG9zaXRpb24gZ2l2ZW4gYXMge3JvdywgY29sdW1ufSB0byBhIHNpbmdsZSBudW1iZXIgd2hpY2ggaXMgdGhlXG4gKiBpbmRleCB0aGUgY3Vyc29yIGFwcGVhcnMgaW4gdGhlIHNvdXJjZSBzdHJpbmcuXG4gKlxuICogaW5kZXggaXMgZ2l2ZW4gc3VjaCB0aGF0IHNvdXJjZS5zbGljZSgwLCBpbmRleCkgaXMgdGhlIHByZWNpc2UgIHN0cmluZyB0aGF0XG4gKiBvY2N1cnMgYmVmb3JlIHRoZSBjdXJzb3IsIGFuZCBzb3VyY2Uuc2xpY2UoaW5kZXgpIGlzIHRoZSBzdHJpbmcgdGhhdCBvY2N1cnNcbiAqIGFmdGVyIHRoZSBjdXJzb3IuXG4gKi9cbmZ1bmN0aW9uIGdldFJhd1Bvc2l0aW9uKFxuICBzb3VyY2U6IHN0cmluZyxcbiAgcG9zaXRpb246IHtyb3c6IG51bWJlciwgY29sdW1uOiBudW1iZXJ9LFxuKTogbnVtYmVyIHtcbiAgcmV0dXJuIHNvdXJjZS5zcGxpdCgnXFxuJykucmVkdWNlKFxuICAgIChjdXJyLCBsaW5lLCBpKSA9PiB7XG4gICAgICBpZiAoaSA8IHBvc2l0aW9uLnJvdykge1xuICAgICAgICByZXR1cm4gY3VyciArIGxpbmUubGVuZ3RoICsgMTtcbiAgICAgIH0gZWxzZSBpZiAoaSA9PT0gcG9zaXRpb24ucm93KSB7XG4gICAgICAgIHJldHVybiBjdXJyICsgcG9zaXRpb24uY29sdW1uO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGN1cnI7XG4gICAgICB9XG4gICAgfSxcbiAgICAwLFxuICApO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFJhd1Bvc2l0aW9uO1xuIl19
