
/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

var addLeadingComments = require('./addLeadingComments');
var addMissingRequires = require('./addMissingRequires');
var addMissingTypes = require('./addMissingTypes');
var formatRequires = require('./formatRequires');
var removeLeadingComments = require('./removeLeadingComments');
var removeUnusedRequires = require('./removeUnusedRequires');
var removeUnusedTypes = require('./removeUnusedTypes');

/**
 * This is the collection of transforms that affect requires.
 */
function transform(root, options) {
  var blacklist = options.blacklist || new Set();
  var comments = undefined;
  if (!blacklist.has('requires.transferComments')) {
    comments = removeLeadingComments(root);
  }
  if (!blacklist.has('requires.removeUnusedRequires')) {
    removeUnusedRequires(root, options);
  }
  if (!blacklist.has('requires.addMissingRequires')) {
    addMissingRequires(root, options);
  }
  if (!blacklist.has('requires.removeUnusedTypes')) {
    removeUnusedTypes(root, options);
  }
  if (!blacklist.has('requires.addMissingTypes')) {
    addMissingTypes(root, options);
  }
  if (!blacklist.has('requires.formatRequires')) {
    formatRequires(root);
  }
  if (!blacklist.has('requires.transferComments')) {
    addLeadingComments(root, comments);
  }
}

module.exports = transform;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBwZmw1Mm5wdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLWZvcm1hdC1qcy1iYXNlL2xpYi9yZXF1aXJlcy90cmFuc2Zvcm0uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxDQUFDOzs7Ozs7Ozs7O0FBZVosSUFBTSxrQkFBa0IsR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQztBQUMzRCxJQUFNLGtCQUFrQixHQUFHLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0FBQzNELElBQU0sZUFBZSxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQ3JELElBQU0sY0FBYyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0FBQ25ELElBQU0scUJBQXFCLEdBQUcsT0FBTyxDQUFDLHlCQUF5QixDQUFDLENBQUM7QUFDakUsSUFBTSxvQkFBb0IsR0FBRyxPQUFPLENBQUMsd0JBQXdCLENBQUMsQ0FBQztBQUMvRCxJQUFNLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDOzs7OztBQUt6RCxTQUFTLFNBQVMsQ0FBQyxJQUFnQixFQUFFLE9BQXNCLEVBQVE7QUFDakUsTUFBTSxTQUE0QixHQUFHLE9BQU8sQ0FBQyxTQUFTLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQztBQUNwRSxNQUFJLFFBQVEsWUFBQSxDQUFDO0FBQ2IsTUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsMkJBQTJCLENBQUMsRUFBRTtBQUMvQyxZQUFRLEdBQUcscUJBQXFCLENBQUMsSUFBSSxDQUFDLENBQUM7R0FDeEM7QUFDRCxNQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQywrQkFBK0IsQ0FBQyxFQUFFO0FBQ25ELHdCQUFvQixDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztHQUNyQztBQUNELE1BQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLDZCQUE2QixDQUFDLEVBQUU7QUFDakQsc0JBQWtCLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0dBQ25DO0FBQ0QsTUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsNEJBQTRCLENBQUMsRUFBRTtBQUNoRCxxQkFBaUIsQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7R0FDbEM7QUFDRCxNQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQywwQkFBMEIsQ0FBQyxFQUFFO0FBQzlDLG1CQUFlLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0dBQ2hDO0FBQ0QsTUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMseUJBQXlCLENBQUMsRUFBRTtBQUM3QyxrQkFBYyxDQUFDLElBQUksQ0FBQyxDQUFDO0dBQ3RCO0FBQ0QsTUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsMkJBQTJCLENBQUMsRUFBRTtBQUMvQyxzQkFBa0IsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7R0FDcEM7Q0FDRjs7QUFFRCxNQUFNLENBQUMsT0FBTyxHQUFHLFNBQVMsQ0FBQyIsImZpbGUiOiIvdmFyL2ZvbGRlcnMveGYvcnNwaDRfYzU3MzE1cnM1N3h4c2Rza3J4bnYzNnQwL1QvdG1wcGZsNTJucHVibGlzaF9wYWNrYWdlcy9ucG0vbnVjbGlkZS1mb3JtYXQtanMtYmFzZS9saWIvcmVxdWlyZXMvdHJhbnNmb3JtLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBiYWJlbCc7XG4vKiBAZmxvdyAqL1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIGxpY2Vuc2UgZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBpblxuICogdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IHR5cGUge0NvbGxlY3Rpb259IGZyb20gJy4uL3R5cGVzL2FzdCc7XG5pbXBvcnQgdHlwZSB7U291cmNlT3B0aW9uc30gZnJvbSAnLi4vb3B0aW9ucy9Tb3VyY2VPcHRpb25zJztcbmltcG9ydCB0eXBlIHtUcmFuc2Zvcm1LZXl9IGZyb20gJy4uL3R5cGVzL3RyYW5zZm9ybXMnO1xuXG5jb25zdCBhZGRMZWFkaW5nQ29tbWVudHMgPSByZXF1aXJlKCcuL2FkZExlYWRpbmdDb21tZW50cycpO1xuY29uc3QgYWRkTWlzc2luZ1JlcXVpcmVzID0gcmVxdWlyZSgnLi9hZGRNaXNzaW5nUmVxdWlyZXMnKTtcbmNvbnN0IGFkZE1pc3NpbmdUeXBlcyA9IHJlcXVpcmUoJy4vYWRkTWlzc2luZ1R5cGVzJyk7XG5jb25zdCBmb3JtYXRSZXF1aXJlcyA9IHJlcXVpcmUoJy4vZm9ybWF0UmVxdWlyZXMnKTtcbmNvbnN0IHJlbW92ZUxlYWRpbmdDb21tZW50cyA9IHJlcXVpcmUoJy4vcmVtb3ZlTGVhZGluZ0NvbW1lbnRzJyk7XG5jb25zdCByZW1vdmVVbnVzZWRSZXF1aXJlcyA9IHJlcXVpcmUoJy4vcmVtb3ZlVW51c2VkUmVxdWlyZXMnKTtcbmNvbnN0IHJlbW92ZVVudXNlZFR5cGVzID0gcmVxdWlyZSgnLi9yZW1vdmVVbnVzZWRUeXBlcycpO1xuXG4vKipcbiAqIFRoaXMgaXMgdGhlIGNvbGxlY3Rpb24gb2YgdHJhbnNmb3JtcyB0aGF0IGFmZmVjdCByZXF1aXJlcy5cbiAqL1xuZnVuY3Rpb24gdHJhbnNmb3JtKHJvb3Q6IENvbGxlY3Rpb24sIG9wdGlvbnM6IFNvdXJjZU9wdGlvbnMpOiB2b2lkIHtcbiAgY29uc3QgYmxhY2tsaXN0OiBTZXQ8VHJhbnNmb3JtS2V5PiA9IG9wdGlvbnMuYmxhY2tsaXN0IHx8IG5ldyBTZXQoKTtcbiAgbGV0IGNvbW1lbnRzO1xuICBpZiAoIWJsYWNrbGlzdC5oYXMoJ3JlcXVpcmVzLnRyYW5zZmVyQ29tbWVudHMnKSkge1xuICAgIGNvbW1lbnRzID0gcmVtb3ZlTGVhZGluZ0NvbW1lbnRzKHJvb3QpO1xuICB9XG4gIGlmICghYmxhY2tsaXN0LmhhcygncmVxdWlyZXMucmVtb3ZlVW51c2VkUmVxdWlyZXMnKSkge1xuICAgIHJlbW92ZVVudXNlZFJlcXVpcmVzKHJvb3QsIG9wdGlvbnMpO1xuICB9XG4gIGlmICghYmxhY2tsaXN0LmhhcygncmVxdWlyZXMuYWRkTWlzc2luZ1JlcXVpcmVzJykpIHtcbiAgICBhZGRNaXNzaW5nUmVxdWlyZXMocm9vdCwgb3B0aW9ucyk7XG4gIH1cbiAgaWYgKCFibGFja2xpc3QuaGFzKCdyZXF1aXJlcy5yZW1vdmVVbnVzZWRUeXBlcycpKSB7XG4gICAgcmVtb3ZlVW51c2VkVHlwZXMocm9vdCwgb3B0aW9ucyk7XG4gIH1cbiAgaWYgKCFibGFja2xpc3QuaGFzKCdyZXF1aXJlcy5hZGRNaXNzaW5nVHlwZXMnKSkge1xuICAgIGFkZE1pc3NpbmdUeXBlcyhyb290LCBvcHRpb25zKTtcbiAgfVxuICBpZiAoIWJsYWNrbGlzdC5oYXMoJ3JlcXVpcmVzLmZvcm1hdFJlcXVpcmVzJykpIHtcbiAgICBmb3JtYXRSZXF1aXJlcyhyb290KTtcbiAgfVxuICBpZiAoIWJsYWNrbGlzdC5oYXMoJ3JlcXVpcmVzLnRyYW5zZmVyQ29tbWVudHMnKSkge1xuICAgIGFkZExlYWRpbmdDb21tZW50cyhyb290LCBjb21tZW50cyk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0cmFuc2Zvcm07XG4iXX0=
